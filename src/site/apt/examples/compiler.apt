  ------
  Compiler Settings
  ------
  Brian Fox
  ------
  Oct 2007
  ------

Ounce Compiler Settings
 
  This page provides information about configuring the compiler settings required by Ounce to analyze your project.
 
* Background

	The Ounce application performs security analysis of your source. To do this, it runs a compiler and sets flags to allow instrumentation of the source and bytecode.
	The Ounce Maven plugin is able to determine most of the settings required for compilation directly from your pom. Occasionally, some settings may need to be tweaked.

* Classpath Scope

    Maven is able to automatically determine the required classpath for compilation. By default, the <<<compile>>> classpath is passed to Ounce. This is the same
	classpath used by the <<<maven-compiler-plugin>>> to build your source in a normal build. The default should be sufficient in nearly all use cases.
	
	You may change the scope of the classpath provided to Ounce by changing the <<<classpathScope>>> parameter. Valid options are: compile, test, runtime and system. Note that the 
	value of this may be upgraded to the test scope if the <<<includeTestSources>>> parameter is set. (see below)
	
	You may read more about classpaths and dependencies {{{http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html}here.}}

* Compile Sources

   The compile source roots are automatically determined and passed to Ounce. This includes the default <<<src/main/java>>> as well as any source roots configured
   via plugins such as the {{{http://mojo.codehaus.org/build-helper-maven-plugin}build-helper-maven-plugin}}. If you would like to include your test source in the analysis,
   you may do so by setting the <<<includeTestSources>>> parameter. Setting this value will include all test sources as well as automatically set the <<<classpathScope>>> value to <<<test>>>.
   
* Compiler Settings

   The {{{http://maven.apache.org/plugins/maven-compiler-plugin}maven-compiler-plugin}} allows the user to specify many extra compiler settings. Some of them will
   also need to be known to the Ounce compiler. See the {{{../project-mojo.html}project}} mojo page for specifics on the individual settings. 
   
   All the settings duplicated from the <<<maven-compiler-plugin>>> have the same name and expression values as the compiler. This is done to make it easy to configure
   both plugins from a single source. A suggested approach to sharing the config is shown below.
   
   You may currently be setting the compiler settings using the config as shown below. (for brevity only the most common, source and target are shown)

+---+
<project>
  ...
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
           <source>1.4</source>
           <target>1.4</target>
        </configuration>
      </plugin>
    </plugins>
  ...
</project   
+---+   
   
  The correct way to share this configuration is through the introduction of properties to hold the values. The configuration is shown below.

+---+
<project>
  ...
    <properties>
	  <my.compiler.source>1.4</my.compiler.source>
	  <my.compiler.target>1.4</my.compiler.target>
    <properties>
    <build>	
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
             <source>${my.compiler.source}</source>
             <target>${my.compiler.target}</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.ouncelabs.maven.plugins</groupId>
          <artifactId>ounce-maven-plugin</artifactId>
          <configuration>
             <source>${my.compiler.source}</source>
             <target>${my.compiler.target}</target>
          </configuration>
        </plugin>
      </plugins>
    </build>
  ...
</project   
+---+  

  It is also worth mentioning that since the ounce plugin looks for compiler values using the same expression as the <<<maven-compiler-plugin>>> you may also
  pass parameters on the command line as you might do currently:
  
+---+
mvn install -Dmaven.compiler.source=1.4 -Dmaven.compiler.target=1.4
+---+

   	